-- CHECK: -- A type
-- CHECK-NEXT: module Basics where {

-- CHECK: id : forall {k : Level} {X : Type k} -> X -> X;
-- CHECK-NEXT: id x = x;

-- CHECK: flip : forall {a b c : Level} {A : Type a} {B : Type b} {C : A -> B -> Type c} ->
-- CHECK-NEXT: ((x : A) (y : B) -> C x y) -> ((y : B) (x : A) -> C x y);
-- CHECK-NEXT: flip f = \ y x -> f x y;

-- CHECK: _ o _ : forall {i j k : Level}
-- CHECK-NEXT: {A : Type i}{B : A -> Type j}{C : (a : A) -> B a -> Type k} ->
-- CHECK-NEXT: (f : {a : A}(b : B a) -> C a b) ->
-- CHECK-NEXT: (g : (a : A) -> B a) ->
-- CHECK-NEXT: (a : A) -> C a (g a);
-- CHECK-NEXT: f o g = \ a -> f (g a);
-- CHECK-NEXT: };


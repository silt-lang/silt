-- RUN: %silt --verify scopes %s

module bad-lhs where

extra-arg-implicit : forall {A : Type} -> A -> A
extra-arg-implicit _ x = x -- expected-error {{function expects 2 arguments but has 2 declared patterns and 1 implicit pattern; extra patterns will be ignored}}
-- expected-note@-1 {{extra pattern will be ignored}}
-- expected-error@-2 {{use of undeclared identifier 'x'}}

extra-args-implicit : forall {A : Type} -> A -> {B : Type} -> B -> {C : Type} -> C -> C
extra-args-implicit a b c x y z = z -- expected-error {{function expects 6 arguments but has 6 declared patterns and 3 implicit patterns; extra patterns will be ignored}}
-- expected-note@-1 {{extra pattern will be ignored}}
-- expected-note@-2 {{extra pattern will be ignored}}
-- expected-note@-3 {{extra pattern will be ignored}}
-- expected-error@-4 {{use of undeclared identifier 'z'}}

id : {A : Type} -> A -> A
id x = let
        y = x
        data List (A : Type) : Type where
          [] : List A
       in y
